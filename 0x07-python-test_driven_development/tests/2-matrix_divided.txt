matrix_divided`` module
======================

Using ``2-matrix_divided``
-------------------

>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

checks

check 1 :
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

check 2 :
    >>> matrix = [[1, 2], [4, 5, 6]]
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size

check 3 :
    >>> matrix = [[1, "Holberton"], [4, 5, 6]]
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

check 4 :
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, "Holb")
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

check 5 :
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

check 6 :
    >>> matrix_divided(None, 1)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

check 7 :
    >>> matrix_divided(50, 3)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

check 8 :
	>>> matrix_divided([[]], 7)
	[[]]
